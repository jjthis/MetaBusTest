{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","socket","io","cors","origin","credentials","transports","query","tenant","id","uuidv4","myEle","aniOver","isRun","pos","sendMovement","emit","type","vec","now","time","Date","toLocaleString","toString","ChatView","props","userList","setUserList","useState","useEffect","document","getElementById","getBoundingClientRect","top","left","on","data","console","log","JSON","stringify","tmp","push","animationShow","vecObject","posObject","list","j","length","handleKeyDown","e","isPressed","key","handleKeyUp","window","addEventListener","removeEventListener","React","createElement","Fragment","class","map","x","ids","start","pre","element","requestAnimationFrame","step","timestamp","progress","Math","min","style","App","className","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uKCexC,MAAMC,EAASC,YAAG,QAAS,CACvBC,KAAM,CACFC,OAAQ,6BACRC,aAAa,GAEjBC,WAAY,CAAC,aACbC,MAAO,CACHC,OAAQ,SAGVC,EAAKC,eAEX,IAAIC,EACAC,EAAU,GACVC,EAAQ,GACRC,EAAM,GAKV,SAASC,IACLd,EAAOe,KAAK,eAAgB,CACxBC,KAAM,OACNR,GAAIA,EACJS,IAAKN,EAAQH,GACbU,IAAKL,EAAIL,GACTW,MAAO,IAAIC,MAAQC,iBAAiBC,aAI5C,SAASC,EAASC,GACd,MAAOC,EAAUC,GAAeC,mBAAS,CAACnB,EAAI,MAmF9C,OAjFAoB,oBAAU,KACNlB,EAAQmB,SAASC,eAAetB,EAAK,IACrCK,EAAIL,GAlBD,CAACE,EAAMqB,wBAAwBC,IAAKtB,EAAMqB,wBAAwBE,MAmBrEjC,EAAOkC,GAAG,WAAaC,IAEnB,GADAC,QAAQC,IAAIC,KAAKC,UAAUJ,IACT,aAAdA,EAAKnB,KAAqB,CAC1B,IAAIwB,EAAM,IAAIf,GACde,EAAIC,KAAKN,EAAK3B,IACdG,EAAQwB,EAAK3B,IAAM2B,EAAKlB,IACxBJ,EAAIsB,EAAK3B,IAAM2B,EAAKjB,IACpBQ,EAAYc,GACZE,EAAcP,EAAK3B,SAChB,GAAkB,SAAd2B,EAAKnB,KACZL,EAAQwB,EAAK3B,IAAM2B,EAAKlB,IACxBJ,EAAIsB,EAAK3B,IAAM2B,EAAKjB,IACpBwB,EAAcP,EAAK3B,SAChB,GAAkB,SAAd2B,EAAKnB,KAAiB,CAC7BL,EAAUwB,EAAKQ,UACf9B,EAAMsB,EAAKS,UACXR,QAAQC,IAAIC,KAAKC,UAAU1B,IAC3Ba,EAAYS,EAAKU,MACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIX,EAAKU,KAAKE,OAAQD,IAAIJ,EAAcP,EAAKU,KAAKC,OAG1EnC,EAAQH,GAAM,CAAC,EAAG,EAAG,EAAG,GACxBI,EAAMJ,IAAM,EACZR,EAAOe,KAAK,eAAgB,CACxBC,KAAM,WACNR,GAAIA,EACJU,IAAKL,EAAIL,GACTS,IAAKN,EAAQH,GACbW,MAAO,IAAIC,MAAQC,iBAAiBC,aAExC,MAAM0B,EAAiBC,IAEnB,IAAIC,GAAY,EACF,eAAVD,EAAEE,KACFxC,EAAQH,GAAI,GAAK,EACjBkC,EAAclC,GACd4B,QAAQC,IAAI,gBACK,cAAVY,EAAEE,KACTxC,EAAQH,GAAI,IAAM,EAClBkC,EAAclC,IACG,cAAVyC,EAAEE,KACTxC,EAAQH,GAAI,GAAK,EACjBkC,EAAclC,IACG,YAAVyC,EAAEE,KACTxC,EAAQH,GAAI,IAAM,EAClBkC,EAAclC,IAEd0C,GAAY,EAEZA,GACApC,KAECsC,EAAeH,IAEpB,IAAIC,GAAY,EACF,eAAVD,EAAEE,IACFxC,EAAQH,GAAI,GAAK,EACA,cAAVyC,EAAEE,IACTxC,EAAQH,GAAI,GAAK,EACA,cAAVyC,EAAEE,IACTxC,EAAQH,GAAI,GAAK,EACA,YAAVyC,EAAEE,IACTxC,EAAQH,GAAI,GAAK,EAEjB0C,GAAY,EACVA,GACFpC,KAMR,OAFAuC,OAAOC,iBAAiB,UAAWN,GACnCK,OAAOC,iBAAiB,QAASF,GAC1B,KACHC,OAAOE,oBAAoB,UAAWP,GACtCK,OAAOE,oBAAoB,QAASH,KAEzC,IAEKI,IAAAC,cAAAD,IAAAE,SAAA,KAIJF,IAAAC,cAAA,OAAKE,MAAM,aACNlC,EAASmC,IAAIC,GAAML,IAAAC,cAAA,OAAKE,MAAM,MAAMnD,GAAIqD,GAAIA,MAIzD,SAASnB,EAAcoB,GAGnB,IAAIC,EAAQ,KACRC,EAAM,KACV,MAAMC,EAAUpC,SAASC,eAAegC,EAAM,IAkB9CT,OAAOa,sBAhBP,SAASC,EAAKC,GACLL,IACDA,EAAQK,EACRJ,EAAMI,GAEV,IAAIC,EAAWD,EAAYJ,EAC3BA,EAAMI,EACNvD,EAAIiD,GAAK,KAAOnD,EAAQmD,GAAK,GAAKnD,EAAQmD,GAAK,IAAMQ,KAAKC,IAAIF,EAAU,KACxExD,EAAIiD,GAAK,KAAOnD,EAAQmD,GAAK,GAAKnD,EAAQmD,GAAK,IAAMQ,KAAKC,IAAIF,EAAU,KACxEJ,EAAQO,MAAMvC,KAAOpB,EAAIiD,GAAK,GAAK,KACnCG,EAAQO,MAAMxC,IAAMnB,EAAIiD,GAAK,GAAK,MAC9BnD,EAAQmD,GAAK,IAAMnD,EAAQmD,GAAK,IAAMnD,EAAQmD,GAAK,IAAMnD,EAAQmD,GAAK,KACtET,OAAOa,sBAAsBC,KAO1BM,MA/Jf,WACI,OACIjB,IAAAC,cAAA,OAAKiB,UAAU,OACXlB,IAAAC,cAAA,UAAQiB,UAAU,cACdlB,IAAAC,cAAClC,EAAQ,SCGVoD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC/E,EAAAmD,EAAA,GAAA6B,KAAAhF,EAAAiF,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAW1D,SAASC,eAAe,SACpD0D,OACHhC,IAAAC,cAACD,IAAMiC,WAAU,KACfjC,IAAAC,cAACgB,EAAG,QAORE","file":"static/js/main.4d4a26f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import logo from './logo.svg';\nimport React, { useEffect, use, useState } from 'react'\nimport './App.css';\nimport { io } from \"socket.io-client\";\nimport { v4 as uuidv4 } from 'uuid';\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <ChatView />\n            </header>\n        </div>\n    );\n}\n\nconst socket = io(\"/chat\", {\n    cors: {\n        origin: \"http://localhost:8080/chat\",\n        credentials: true\n    },\n    transports: [\"websocket\"],\n    query: {\n        tenant: 'EGU'\n    }\n});\nconst id = uuidv4();\n\nlet myEle;\nlet aniOver = {};\nlet isRun = {};\nlet pos = {};\nfunction getMyPosition() {\n    return [myEle.getBoundingClientRect().top, myEle.getBoundingClientRect().left];\n}\n\nfunction sendMovement() {\n    socket.emit('chat message', {\n        type: 'move',\n        id: id,\n        vec: aniOver[id],\n        now: pos[id],\n        time: (new Date()).toLocaleString().toString()\n    });\n}\n\nfunction ChatView(props) {\n    const [userList, setUserList] = useState([id, 232]);\n\n    useEffect(() => {\n        myEle = document.getElementById(id + \"\");\n        pos[id] = getMyPosition();\n        socket.on('response', (data) => {\n            console.log(JSON.stringify(data));\n            if (data.type === 'join new') {\n                let tmp = [...userList];\n                tmp.push(data.id);\n                aniOver[data.id] = data.vec;\n                pos[data.id] = data.now;\n                setUserList(tmp);\n                animationShow(data.id);\n            } else if (data.type === 'move') {\n                aniOver[data.id] = data.vec;\n                pos[data.id] = data.now;\n                animationShow(data.id);\n            } else if (data.type === 'init') {\n                aniOver = data.vecObject;\n                pos = data.posObject;\n                console.log(JSON.stringify(pos));\n                setUserList(data.list);\n                for (let j = 0; j < data.list.length; j++)animationShow(data.list[j]);\n            }\n        });\n        aniOver[id] = [0, 0, 0, 0];\n        isRun[id] = false;\n        socket.emit('chat message', {\n            type: 'join new',\n            id: id,\n            now: pos[id],\n            vec: aniOver[id],\n            time: (new Date()).toLocaleString().toString()\n        });\n        const handleKeyDown = (e) => {\n            // 키보드 이벤트 처리\n            let isPressed = true;\n            if (e.key === 'ArrowRight') {\n                aniOver[id][0] = 1;\n                animationShow(id);\n                console.log(\"PRESS RIGHT\");\n            } else if (e.key === 'ArrowLeft') {\n                aniOver[id][1] = -1;\n                animationShow(id);\n            } else if (e.key === 'ArrowDown') {\n                aniOver[id][2] = 1;\n                animationShow(id);\n            } else if (e.key === 'ArrowUp') {\n                aniOver[id][3] = -1;\n                animationShow(id);\n            } else {\n                isPressed = false;\n            }\n            if (isPressed) {\n                sendMovement();\n            }\n        }; const handleKeyUp = (e) => {\n            // 키보드 이벤트 처리\n            let isPressed = true;\n            if (e.key === 'ArrowRight') {\n                aniOver[id][0] = 0;\n            } else if (e.key === 'ArrowLeft') {\n                aniOver[id][1] = 0;\n            } else if (e.key === 'ArrowDown') {\n                aniOver[id][2] = 0;\n            } else if (e.key === 'ArrowUp') {\n                aniOver[id][3] = 0;\n            } else {\n                isPressed = false;\n            } if (isPressed) {\n                sendMovement();\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyDown);\n        window.addEventListener('keyup', handleKeyUp);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n            window.removeEventListener('keyup', handleKeyUp);\n        };\n    }, []);\n\n    return (<>\n        {/* <button onClick={push}>\n            hiButton\n        </button> */}\n        <div class='container' >\n            {userList.map(x => (<div class=\"box\" id={x}>{x}</div>))}\n        </div>\n    </>)\n}\nfunction animationShow(ids) {\n\n    \n    let start = null;\n    let pre = null;\n    const element = document.getElementById(ids + \"\");\n\n    function step(timestamp) {\n        if (!start) {\n            start = timestamp;\n            pre = timestamp;\n        }\n        let progress = timestamp - pre;\n        pre = timestamp;\n        pos[ids][0] += (aniOver[ids][0] + aniOver[ids][1]) * Math.min(progress, 2000);\n        pos[ids][1] += (aniOver[ids][2] + aniOver[ids][3]) * Math.min(progress, 2000);\n        element.style.left = pos[ids][0] + \"px\";\n        element.style.top = pos[ids][1] + \"px\";\n        if (aniOver[ids][0] || aniOver[ids][1] || aniOver[ids][2] || aniOver[ids][3]) {\n            window.requestAnimationFrame(step);\n        } \n    }\n\n    window.requestAnimationFrame(step);\n\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}